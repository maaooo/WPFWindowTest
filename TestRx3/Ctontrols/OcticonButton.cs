using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows;
using System.Windows.Controls;

namespace TestRx3.Ctontrols {
    public enum Octicon {
        alert,
        alignment_align,
        alignment_aligned_to,
        alignment_unalign,
        arrow_down,
        arrow_left,
        arrow_right,
        arrow_small_down,
        arrow_small_left,
        arrow_small_right,
        arrow_small_up,
        arrow_up,
        beer,
        book,
        bookmark,
        briefcase,
        broadcast,
        browser,
        bug,
        calendar,
        check,
        checklist,
        chevron_down,
        chevron_left,
        chevron_right,
        chevron_up,
        circle_slash,
        circuit_board,
        clippy,
        clock,
        cloud_download,
        cloud_upload,
        code,
        color_mode,
        comment_discussion,
        comment,
        credit_card,
        dash,
        dashboard,
        database,
        device_camera_video,
        device_camera,
        device_desktop,
        device_mobile,
        diff_added,
        diff_ignored,
        diff_modified,
        diff_removed,
        diff_renamed,
        diff,
        ellipsis,
        eye,
        file_binary,
        file_code,
        file_directory,
        file_media,
        file_pdf,
        file_submodule,
        file_symlink_directory,
        file_symlink_file,
        file_text,
        file_zip,
        flame,
        fold,
        gear,
        gift,
        gist_secret,
        gist,
        git_branch,
        git_commit,
        git_compare,
        git_merge,
        git_pull_request,
        globe,
        graph,
        heart,
        history,
        home,
        horizontal_rule,
        hourglass,
        hubot,
        inbox,
        info,
        issue_closed,
        issue_opened,
        issue_reopened,
        jersey,
        jump_down,
        jump_left,
        jump_right,
        jump_up,
        key,
        keyboard,
        law,
        light_bulb,
        link_external,
        link,
        list_ordered,
        list_unordered,
        location,
        @lock,
        logo_github,
        mail_read,
        mail_reply,
        mail,
        mark_github,
        markdown,
        megaphone,
        mention,
        microscope,
        milestone,
        mirror,
        mortar_board,
        move_down,
        move_left,
        move_right,
        move_up,
        mute,
        no_newline,
        octoface,
        organization,
        package,
        paintcan,
        pencil,
        person,
        pin,
        playback_fast_forward,
        playback_pause,
        playback_play,
        playback_rewind,
        plug,
        plus,
        podium,
        primitive_dot,
        primitive_square,
        pulse,
        puzzle,
        question,
        quote,
        radio_tower,
        repo_clone,
        repo_force_push,
        repo_forked,
        repo_pull,
        repo_push,
        repo,
        rocket,
        rss,
        ruby,
        screen_full,
        screen_normal,
        search,
        server,
        settings,
        sign_in,
        sign_out,
        split,
        squirrel,
        star,
        steps,
        stop,
        sync,
        tag,
        telescope,
        terminal,
        three_bars,
        thumbsdown,
        thumbsup,
        tools,
        trashcan,
        triangle_down,
        triangle_left,
        triangle_right,
        triangle_up,
        unfold,
        unmute,
        versions,
        x,
        zap
    }
    public class OcticonButton : Button {
        public static readonly DependencyProperty IconRotationAngleProperty = DependencyProperty.Register("IconRotationAngle", typeof(double), typeof(OcticonButton), new FrameworkPropertyMetadata(0.0, FrameworkPropertyMetadataOptions.AffectsRender));

        public double IconRotationAngle {
            get {
                return (double)base.GetValue(OcticonButton.IconRotationAngleProperty);
            }
            set {
                base.SetValue(OcticonButton.IconRotationAngleProperty, value);
            }
        }
    }
}
