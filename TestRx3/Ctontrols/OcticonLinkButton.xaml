<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:TestRx3"
                    xmlns:ctontrols="clr-namespace:TestRx3.Ctontrols">
    <Style x:Key="OcticonLinkButton" TargetType="{x:Type local:OcticonLinkButton}">
        <Setter Property="Control.Background" Value="#00FFFFFF" />
        <Setter Property="Control.Foreground" Value="{StaticResource GHBlueLinkButtonTextBrush}" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource NegativeMarginFocusVisual}" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="Control.Padding" Value="0,0,0,0" />
        <Setter Property="Control.FontSize" Value="14" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Right" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="#00FFFFFF" IsHitTestVisible="True" HorizontalAlignment="Left" Margin="{TemplateBinding Control.Padding}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Viewbox Name="viewbox" IsHitTestVisible="False" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Height="{Binding Path=IconHeight, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=16.0}" Width="{Binding Path=IconWidth, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=16.0}">
                            <Path Name="octicon" SnapsToDevicePixels="True" Height="1024" RenderTransformOrigin="0.5,0.5" Data="{Binding Path=(Path.Data), RelativeSource={RelativeSource TemplatedParent}}">
                                <Path.Fill>
                                    <SolidColorBrush Color="{StaticResource GHBlueLinkButtonIconColor}" />
                                </Path.Fill>
                                <Path.RenderTransform>
                                    <RotateTransform Angle="{Binding Path=(ctontrols:OcticonButton.IconRotationAngle), RelativeSource={RelativeSource TemplatedParent}}" />
                                </Path.RenderTransform>
                            </Path>
                        </Viewbox>
                        <ContentPresenter Name="contentPresenter" IsHitTestVisible="False" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" RecognizesAccessKey="True" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}" Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                            <ContentPresenter.Style>
                                <Style TargetType="{x:Type ContentPresenter}">
                                    <Style.Triggers>
                                        <Trigger Property="ContentPresenter.Content" Value="{x:Null}">
                                            <Setter Property="UIElement.Visibility" Value="Collapsed" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentPresenter.Style>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Control.HorizontalContentAlignment" Value="Left">
                            <Setter TargetName="contentPresenter" Property="Grid.Column" Value="0" />
                            <Setter TargetName="viewbox" Property="Grid.Column" Value="1" />
                            <Setter TargetName="contentPresenter" Property="FrameworkElement.Margin" Value="0,0,3,0" />
                        </Trigger>
                        <Trigger Property="Control.HorizontalContentAlignment" Value="Right">
                            <Setter TargetName="contentPresenter" Property="Grid.Column" Value="1" />
                            <Setter TargetName="viewbox" Property="Grid.Column" Value="0" />
                            <Setter TargetName="contentPresenter" Property="FrameworkElement.Margin" Value="3,0,0,0" />
                        </Trigger>
                        <Trigger Property="Control.HorizontalContentAlignment" Value="Center">
                            <Setter TargetName="contentPresenter" Property="Grid.Column" Value="0" />
                            <Setter TargetName="viewbox" Property="Grid.Column" Value="0" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Value="{StaticResource GHBlueLinkButtonHoverBrush}" Property="Control.Foreground" />
                            <Setter TargetName="octicon" Value="{StaticResource GHBlueLinkButtonHoverIconBrush}" Property="Shape.Fill" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter Value="{StaticResource GHBlueLinkButtonPressedBrush}" Property="Control.Foreground" />
                            <Setter TargetName="octicon" Value="{StaticResource GHBlueLinkButtonPressedIconBrush}" Property="Shape.Fill" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="UIElement.Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type local:OcticonLinkButton}" BasedOn="{StaticResource OcticonLinkButton}" TargetType="{x:Type local:OcticonLinkButton}" />
</ResourceDictionary>